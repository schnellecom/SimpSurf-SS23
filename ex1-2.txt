LoadPackage("SimplicialSurface");;

tet := SimplicialSurfaceByDownwardIncidence(4, 6, 4, [[2,3],[2,4],[3,4],[1,4],[2,1],[1,3]], [[1,2,3],[1,5,6],[3,4,6],[2,4,5]]);
oct := SimplicialSurfaceByDownwardIncidence(6, 12, 8, [[1,2],[1,5],[1,4],[1,3], [2,3],[2,5],[4,5],[3,4], [2,6],[5,6],[4,6],[3,6]], [[1,4,5],[3,4,8],[1,2,6],[2,3,7], [5,9,12],[8,11,12],[6,9,10],[7,10,11]]);

tetPositions := [ [ 1, -1/Sqrt(3.), -1/Sqrt(6.) ], [ -1, -1/Sqrt(3.), -1/Sqrt(6.) ], [ 0, 2/Sqrt(3.) , -1/Sqrt(6.) ], [ 0, 0, 3/Sqrt(6.) ] ];;
tetPrintRecord := SetVertexCoordinates3D(tet, tetPositions, rec());
DrawSurfaceToJavaScript(tet, "tetrahedron.html", tetPrintRecord);

octPositions := [ [ 0, 0, Sqrt(2.) ],[ 1, 1, 0 ],[ 1, -1, 0 ],[ -1, -1, 0 ],[ -1, 1, 0 ],[ 0, 0, -Sqrt(2.) ] ];
octPrintRecord := SetVertexCoordinates3D(oct, octPositions, rec());
DrawSurfaceToJavaScript(oct, "octahedron.html", octPrintRecord);

nOneFaces:=function(n)
	local i, vertices, edges, faces, verticesOfEdges, edgesOfFaces, surface;
	vertices := n*3;
	edges := n*3;
	faces := n;

	verticesOfEdges := [];
	edgesOfFaces := [];
	for i in [0..n-1] do
		Add(verticesOfEdges, [3*i+1,3*i+2]);
		Add(verticesOfEdges, [3*i+2,3*i+3]);
		Add(verticesOfEdges, [3*i+3,3*i+1]);

		Add(edgesOfFaces, [3*i+1,3*i+2,3*i+3]);
	od;

	surface := SimplicialSurfaceByDownwardIncidence(vertices, edges, faces, verticesOfEdges, edgesOfFaces);
	return surface;
end;